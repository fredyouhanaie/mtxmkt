
@author Fred Youhanaie <fyrlang@anydata.co.uk>
@copyright 2018 Fred Youhanaie
@version 0.1.0

@doc

<h3>Introduction</h3>

<a href="https://math.nist.gov/MatrixMarket/">Matrix Market</a>
provides a repository of test matrices for various applications
areas. It is best described on their web site:

<blockquote><i>A visual repository of test data for use in comparative studies of
algorithms for numerical linear algebra, featuring nearly 500 sparse
matrices from a variety of applications, as well as matrix generation
tools and services.</i></blockquote>

<b>mtxmkt</b> is an Erlang library to handle Matrix Market files. The
format of the files is described <a
href="https://math.nist.gov/MatrixMarket/formats.html">here</a>.

The library functions are loosely based on the <a
href="https://math.nist.gov/MatrixMarket/mmio-c.html"> mmio C library
</a> provided by Matrix market.

The <code>mtxmkt</code> module handles the matrix input and output
functions, while the <code>matrix</code> module handle the internal
matrix data structure.

The simplest way to read a matrix is to use the
<code>mtxmkt:mm_readfile/1</code> or <code>mtxmkt:mm_readfile/2</code>
function. Both function will read a file and return a matrix. The
matrix data can be accessed and manipuled using the
<code>matrix</code> module.

Using the <code>matrix</code> module one can get and set individual
matrix elements, rows, and columns.

To create a new matrix, use the <code>matrix:new/3</code>
function. Once the empty matrix is obtained, it can be populated with
data one data item at a time, as well as storing whole rows and
columns by supplying lists of values. The entire matrix can be
populated on one step using the <code>matrix:from_list/2</code>
function and a list of lists.
